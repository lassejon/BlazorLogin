@page "/Login"
@inject IUserRepository Repository
@using Microsoft.AspNetCore.Components
@using global::Login.Interfaces
@using global::Login.Dtos

<PageTitle>SignIn</PageTitle>

<head>
	<meta charset="UTF-8">
	<title>CodePen - A Pen by Mohithpoojary</title>
	<link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.2.0/css/all.css'>
	<link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.2.0/css/fontawesome.css'>
	<link rel="stylesheet" href="./css/login.css">
</head>

@if (_signup)
{
	<CreateUser></CreateUser>
}
else if (_loginResponse is not {Verified: true })
{
	<div class="container">
		<div class="screen">
			<div class="screen__content">
				<form class="login">
					<div class="login__field">
						<i class="login__icon fas fa-user"></i>
						<input type="text" class="login__input" placeholder="User name / Email" @bind="_loginUserDto.Email" @oninput="OnEmailEvent">
					</div>
					<div class="login__field">
						<i class="login__icon fas fa-lock"></i>
						<input type="password" class="login__input" placeholder="Password" @bind="_loginUserDto.Password" @oninput="OnPasswordEvent">
					</div>			
				</form>
				<button class="button login__submit" @onclick="OnSignInEvent">
					<span class="button__text">Log In Now</span>
					<i class="button__icon fas fa-chevron-right"></i>
				</button>
				<button class="button login__submit" @onclick="OnSignupEvent">
                	<span class="button__text">Sign Up Now</span>
                	<i class="button__icon fas fa-chevron-right"></i>
                </button>	
				<div class="social-login">
					<h3>log in via</h3>
					<div class="social-icons">
						<a href="#" class="social-login__icon fab fa-instagram"></a>
						<a href="#" class="social-login__icon fab fa-facebook"></a>
						<a href="#" class="social-login__icon fab fa-twitter"></a>
					</div>
				</div>
			</div>
			<div class="screen__background">
				<span class="screen__background__shape screen__background__shape4"></span>
				<span class="screen__background__shape screen__background__shape3"></span>		
				<span class="screen__background__shape screen__background__shape2"></span>
				<span class="screen__background__shape screen__background__shape1"></span>
			</div>		
		</div>
	</div>
}
else
{
	<Profile LoginUserResponseDto="_loginResponse"></Profile>
}


@code
{
	private bool _signup = false;
	private readonly LoginUserDto _loginUserDto = new();
	private LoginUserResponseDto? _loginResponse;
	
	private void OnSignupEvent()
	{
		_signup = true;
	}

	private async Task<bool> OnSignInEvent()
	{
		_loginResponse = await Repository.LoginUser(_loginUserDto);

		return _loginResponse!.Verified;
	}

	private void OnEmailEvent(ChangeEventArgs obj)
	{
		_loginUserDto.Email = (string) obj.Value!;
	}

	private void OnPasswordEvent(ChangeEventArgs obj)
	{
		_loginUserDto.Password = (string) obj.Value!;
	}
}